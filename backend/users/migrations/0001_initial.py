# Generated by Django 3.0.8 on 2020-07-26 20:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.managers
import users.utils
import users.validations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('clinics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('passport_id', models.CharField(db_index=True, error_messages={'unique': 'A user with that passport id already exist'}, max_length=20, unique=True, validators=[users.validations.PassportIdValidator()])),
                ('photo', models.ImageField(blank=True, null=True, upload_to=users.utils.get_user_photo_path)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('patronymic', models.CharField(max_length=100)),
                ('passport_series', models.CharField(max_length=10)),
                ('birthday', models.DateField()),
                ('phone', models.CharField(max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(max_length=100)),
                ('about_me', models.TextField()),
                ('workplace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to='clinics.Clinic')),
            ],
            options={
                'abstract': False,
            },
            bases=('users.baseuser',),
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
    ]
